!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/common"),require("primeng-lts/ripple"),require("primeng-lts/api"),require("@angular/router"),require("primeng-lts/dom")):"function"==typeof define&&define.amd?define("primeng-lts/tabmenu",["exports","@angular/core","@angular/common","primeng-lts/ripple","primeng-lts/api","@angular/router","primeng-lts/dom"],t):t(((e="undefined"!=typeof globalThis?globalThis:e||self)["primeng-lts"]=e["primeng-lts"]||{},e["primeng-lts"].tabmenu={}),e.ng.core,e.ng.common,e["primeng-lts"].ripple,e["primeng-lts"].api,e.ng.router,e["primeng-lts"].dom)}(this,(function(e,t,n,i,a,l,r){"use strict";var m=function(){function e(){}return e.prototype.ngAfterContentInit=function(){var e=this;this.templates.forEach((function(t){switch(t.getType()){case"item":default:e.itemTemplate=t.template}}))},e.prototype.ngAfterViewInit=function(){this.updateInkBar()},e.prototype.ngAfterViewChecked=function(){this.tabChanged&&(this.updateInkBar(),this.tabChanged=!1)},e.prototype.itemClick=function(e,t){t.disabled?e.preventDefault():(t.command&&t.command({originalEvent:e,item:t}),this.activeItem=t,this.tabChanged=!0)},e.prototype.updateInkBar=function(){var e=r.DomHandler.findSingle(this.navbar.nativeElement,"li.p-highlight");e&&(this.inkbar.nativeElement.style.width=r.DomHandler.getWidth(e)+"px",this.inkbar.nativeElement.style.left=r.DomHandler.getOffset(e).left-r.DomHandler.getOffset(this.navbar.nativeElement).left+"px")},e}();m.decorators=[{type:t.Component,args:[{selector:"p-tabMenu",template:'\n        <div [ngClass]="\'p-tabmenu p-component\'" [ngStyle]="style" [class]="styleClass">\n            <ul #navbar class="p-tabmenu-nav p-reset" role="tablist">\n                <li *ngFor="let item of model; let i = index" role="tab" [attr.aria-selected]="activeItem==item" [attr.aria-expanded]="activeItem==item"\n                    [ngClass]="{\'p-tabmenuitem\':true,\'p-disabled\':item.disabled,\'p-highlight\':activeItem==item,\'p-hidden\': item.visible === false}">\n                    <a *ngIf="!item.routerLink" [attr.href]="item.url" class="p-menuitem-link" role="presentation" (click)="itemClick($event,item)" (keydown.enter)="itemClick($event,item)" [attr.tabindex]="item.disabled ? null : \'0\'"\n                        [attr.target]="item.target" [attr.title]="item.title" [attr.id]="item.id" pRipple>\n                        <ng-container *ngIf="!itemTemplate">\n                            <span class="p-menuitem-icon" [ngClass]="item.icon" *ngIf="item.icon"></span>\n                            <span class="p-menuitem-text" *ngIf="item.escape !== false; else htmlLabel">{{item.label}}</span>\n                            <ng-template #htmlLabel><span class="p-menuitem-text" [innerHTML]="item.label"></span></ng-template>\n                        </ng-container>\n                        <ng-container *ngTemplateOutlet="itemTemplate; context: {$implicit: item, index: i}"></ng-container>\n                    </a>\n                    <a *ngIf="item.routerLink" [routerLink]="item.routerLink" [queryParams]="item.queryParams" [routerLinkActive]="\'p-menuitem-link-active\'" [routerLinkActiveOptions]="item.routerLinkActiveOptions||{exact:false}"\n                        role="presentation" class="p-menuitem-link" (click)="itemClick($event,item)" (keydown.enter)="itemClick($event,item)" [attr.tabindex]="item.disabled ? null : \'0\'"\n                        [attr.target]="item.target" [attr.title]="item.title" [attr.id]="item.id"\n                        [fragment]="item.fragment" [queryParamsHandling]="item.queryParamsHandling" [preserveFragment]="item.preserveFragment" [skipLocationChange]="item.skipLocationChange" [replaceUrl]="item.replaceUrl" [state]="item.state" pRipple>\n                        <ng-container *ngIf="!itemTemplate">\n                            <span class="p-menuitem-icon" [ngClass]="item.icon" *ngIf="item.icon"></span>\n                            <span class="p-menuitem-text" *ngIf="item.escape !== false; else htmlRouteLabel">{{item.label}}</span>\n                            <ng-template #htmlRouteLabel><span class="p-menuitem-text" [innerHTML]="item.label"></span></ng-template>\n                        </ng-container>\n                        <ng-container *ngTemplateOutlet="itemTemplate; context: {$implicit: item, index: i}"></ng-container>\n                    </a>\n                </li>\n                <li #inkbar class="p-tabmenu-ink-bar"></li>\n            </ul>\n        </div>\n    ',changeDetection:t.ChangeDetectionStrategy.OnPush,encapsulation:t.ViewEncapsulation.None,styles:[".p-tabmenu-nav{-ms-flex-wrap:wrap;flex-wrap:wrap;list-style-type:none;margin:0;padding:0}.p-tabmenu-nav,.p-tabmenu-nav a{display:-ms-flexbox;display:flex}.p-tabmenu-nav a{-moz-user-select:none;-ms-flex-align:center;-ms-user-select:none;-webkit-user-select:none;align-items:center;cursor:pointer;overflow:hidden;position:relative;text-decoration:none;user-select:none}.p-tabmenu-nav a:focus{z-index:1}.p-tabmenu-nav .p-menuitem-text{line-height:1}.p-tabmenu-ink-bar{display:none;z-index:1}"]}]}],m.propDecorators={model:[{type:t.Input}],activeItem:[{type:t.Input}],popup:[{type:t.Input}],style:[{type:t.Input}],styleClass:[{type:t.Input}],navbar:[{type:t.ViewChild,args:["navbar"]}],inkbar:[{type:t.ViewChild,args:["inkbar"]}],templates:[{type:t.ContentChildren,args:[a.PrimeTemplate]}]};var p=function(){};p.decorators=[{type:t.NgModule,args:[{imports:[n.CommonModule,l.RouterModule,a.SharedModule,i.RippleModule],exports:[m,l.RouterModule,a.SharedModule],declarations:[m]}]}],e.TabMenu=m,e.TabMenuModule=p,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=primeng-lts-tabmenu.umd.min.js.map