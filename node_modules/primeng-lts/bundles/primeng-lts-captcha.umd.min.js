!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/common")):"function"==typeof define&&define.amd?define("primeng-lts/captcha",["exports","@angular/core","@angular/common"],e):e(((t="undefined"!=typeof globalThis?globalThis:t||self)["primeng-lts"]=t["primeng-lts"]||{},t["primeng-lts"].captcha={}),t.ng.core,t.ng.common)}(this,(function(t,e,n){"use strict";var i=function(){function t(t,n,i){this.el=t,this._zone=n,this.cd=i,this.siteKey=null,this.theme="light",this.type="image",this.size="normal",this.tabindex=0,this.initCallback="initRecaptcha",this.onResponse=new e.EventEmitter,this.onExpire=new e.EventEmitter,this._instance=null,this._language=null}return Object.defineProperty(t.prototype,"language",{get:function(){return this._language},set:function(t){this._language=t,this.init()},enumerable:!1,configurable:!0}),t.prototype.ngAfterViewInit=function(){var t=this;window.grecaptcha?window.grecaptcha.render?this.init():setTimeout((function(){t.init()}),100):window[this.initCallback]=function(){t.init()}},t.prototype.init=function(){var t=this;this._instance=window.grecaptcha.render(this.el.nativeElement.children[0],{sitekey:this.siteKey,theme:this.theme,type:this.type,size:this.size,tabindex:this.tabindex,hl:this.language,callback:function(e){t._zone.run((function(){return t.recaptchaCallback(e)}))},"expired-callback":function(){t._zone.run((function(){return t.recaptchaExpiredCallback()}))}})},t.prototype.reset=function(){null!==this._instance&&(window.grecaptcha.reset(this._instance),this.cd.markForCheck())},t.prototype.getResponse=function(){return null===this._instance?null:window.grecaptcha.getResponse(this._instance)},t.prototype.recaptchaCallback=function(t){this.onResponse.emit({response:t})},t.prototype.recaptchaExpiredCallback=function(){this.onExpire.emit()},t.prototype.ngOnDestroy=function(){null!=this._instance&&window.grecaptcha.reset(this._instance)},t}();i.decorators=[{type:e.Component,args:[{selector:"p-captcha",template:"<div></div>",changeDetection:e.ChangeDetectionStrategy.OnPush,encapsulation:e.ViewEncapsulation.None}]}],i.ctorParameters=function(){return[{type:e.ElementRef},{type:e.NgZone},{type:e.ChangeDetectorRef}]},i.propDecorators={siteKey:[{type:e.Input}],theme:[{type:e.Input}],type:[{type:e.Input}],size:[{type:e.Input}],tabindex:[{type:e.Input}],initCallback:[{type:e.Input}],onResponse:[{type:e.Output}],onExpire:[{type:e.Output}],language:[{type:e.Input}]};var a=function(){};a.decorators=[{type:e.NgModule,args:[{imports:[n.CommonModule],exports:[i],declarations:[i]}]}],t.Captcha=i,t.CaptchaModule=a,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=primeng-lts-captcha.umd.min.js.map